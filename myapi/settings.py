"""
Django settings for myapi project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from datetime import timedelta
import dj_database_url 
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'd*#iwh1+zrb*n!9m8tl^ny-#ibl^wkizi))%dbxp+8++na8%m^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# Application definition
INSTALLED_APPS = [
    # Django Apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_email_verification',
    # Third-Party Apps
    'django_apscheduler',

    'easy_pdf',
    'rest_framework',
    'crispy_forms',
    'django_rest_passwordreset',
    'corsheaders',
    # cron class
    'django_crontab',
    'django_cron',
    # my apps
    'adminside.apps.AdminsideConfig',
    'user',
    'UserAuth.apps.UserauthConfig',
]
# crontab configurations
CRONTAB_COMMAND_SUFFIX = '2>&1'
CRONJOBS = [
    ('*/1 * * * *', 'myapi.cron.my_scheduled_job','>> /home/marghoob/file.log'),
    ('*/1 * * * *', 'myapi.cron.automatic_clockout','>> /home/marghoob/clockout.log')

]
# crontab cache
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
    }
}


CRON_CLASSES = [
    "adminside.cron.MyCronJob",
]
# auth model

AUTH_USER_MODEL = 'UserAuth.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',

    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.common.CommonMiddleware',

    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myapi.urls'

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_ALL_ORIGINS=True
ALLOWED_HOSTS=['http://localhost:3000',
        'localhost:3000','127.0.0.1', 
        '2be5873014e7.ngrok.io',
        'herokudjangoapp11abc.herokuapp.com']
CORS_ORIGIN_WHITELIST = ['http://localhost:3000']
                         
CORS_ALLOWED_ORIGINS = [

"localhost:3000","2be5873014e7.ngrok.io",
"http://127.0.0.1:8000"]
JWT_AUTH = {
    # Authorization:Token xxx
    'JWT_AUTH_HEADER_PREFIX': 'Token', }
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR),os.path.join(BASE_DIR,'myapi')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("redis-server-name", 6379)],
        },
    },
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=30),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}
# WSGI_APPLICATION = 'myapi.wsgi.application'
ASGI_APPLICATION = "myapi.routing.application"
# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    #   'users': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db1.sqlite3'),
    # }
    # 'default': {

    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',

    #     'NAME': 'postgres',

    #     'USER': 'postgres',

    #     'PASSWORD': '786HaqHu',

    #     'HOST': 'localhost',

    #     'PORT': '5433',

    # }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
REST_AUTH_SERIALIZERS = {
    'PASSWORD_RESET_SERIALIZER': 'UserAuth.serializer.PasswordResetSerializer',
}
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'marghoobahmad0344@gmail.com'
# EMAIL_HOST_PASSWORD = 'drqrbigqxsbzvpos'

EMAIL_HOST_USER = 'asifbakhtiar18@gmail.com'
EMAIL_HOST_PASSWORD = 'fhmviqlxmsvxfimk'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
ACCOUNT_EMAIL_REQUIRED = True
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}
LOGIN_REDIRECT_URL = 'http://localhost:3000/'
STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
PROJECT_ROOT   =   os.path.join(os.path.abspath(__file__))
REACT_APP_DIR = os.path.join(BASE_DIR)
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
prod_db  =  dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(prod_db)
